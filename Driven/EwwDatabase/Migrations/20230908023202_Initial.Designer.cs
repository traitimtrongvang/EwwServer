// <auto-generated />
using System;
using EwwDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EwwDatabase.Migrations
{
    [DbContext(typeof(EwwDatabaseContext))]
    [Migration("20230908023202_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Application.Domain.Entities.Conversation", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<string>("CreatorUserId")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<string>("Name")
                        .HasColumnType("varchar");

                    b.Property<int>("Type")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("CreatorUserId");

                    b.ToTable("Conversations");
                });

            modelBuilder.Entity("Application.Domain.Entities.Member", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ConversationId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<bool>("IsAccepted")
                        .HasColumnType("boolean");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("timestamp");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.HasIndex("ConversationId");

                    b.HasIndex("UserId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("Application.Domain.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("varchar");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp");

                    b.Property<Guid>("SenderMemberId")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("Updated")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.HasIndex("SenderMemberId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("Application.Domain.Entities.Member", b =>
                {
                    b.HasOne("Application.Domain.Entities.Conversation", "Conversation")
                        .WithMany("MemberList")
                        .HasForeignKey("ConversationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversation");
                });

            modelBuilder.Entity("Application.Domain.Entities.Message", b =>
                {
                    b.HasOne("Application.Domain.Entities.Member", "SenderMember")
                        .WithMany("MessageList")
                        .HasForeignKey("SenderMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SenderMember");
                });

            modelBuilder.Entity("Application.Domain.Entities.Conversation", b =>
                {
                    b.Navigation("MemberList");
                });

            modelBuilder.Entity("Application.Domain.Entities.Member", b =>
                {
                    b.Navigation("MessageList");
                });
#pragma warning restore 612, 618
        }
    }
}
